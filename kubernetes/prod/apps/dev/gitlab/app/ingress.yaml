---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    external-dns.alpha.kubernetes.io/cloudflare-proxied: "false"
    external-dns.alpha.kubernetes.io/target: ipv4.${CLUSTER_SECRET_PRD_DOMAIN}
    meta.helm.sh/release-name: gitlab
    meta.helm.sh/release-namespace: dev
    kubernetes.io/ingress.provider: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: 512m
    nginx.ingress.kubernetes.io/proxy-connect-timeout: '15'
    nginx.ingress.kubernetes.io/proxy-read-timeout: '600'
    nginx.ingress.kubernetes.io/service-upstream: 'true'
    nginx.ingress.kubernetes.io/custom-http-errors: "418"
  labels:
    app.kubernetes.io/managed-by: Helm
    chart: gitlab
    helm.toolkit.fluxcd.io/name: gitlab
    helm.toolkit.fluxcd.io/namespace: dev
    heritage: Helm
    release: gitlab
    app: webservice
    gitlab.com/webservice-name: default
  name: gitlab-opnsense-ingress
  namespace: dev
spec:
  ingressClassName: external
  rules:
    - host: gitlab.${CLUSTER_SECRET_PRD_DOMAIN}
      http:
        paths:
          - backend:
              service:
                name: gitlab-webservice-default
                port:
                  number: 8181
            path: /
            pathType: Prefix
  tls:
    - hosts:
        - gitlab.${CLUSTER_SECRET_PRD_DOMAIN}
      secretName: "${CLUSTER_SECRET_PRD_DOMAIN/./-}-tls"
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    external-dns.alpha.kubernetes.io/cloudflare-proxied: "false"
    external-dns.alpha.kubernetes.io/target: ipv4.${CLUSTER_SECRET_PRD_DOMAIN}
    kubernetes.io/ingress.provider: nginx
    meta.helm.sh/release-name: gitlab
    meta.helm.sh/release-namespace: dev
    nginx.ingress.kubernetes.io/custom-http-errors: ''
    nginx.ingress.kubernetes.io/proxy-buffering: 'off'
  labels:
    app: kas
    app.kubernetes.io/managed-by: Helm
    helm.toolkit.fluxcd.io/name: gitlab
    helm.toolkit.fluxcd.io/namespace: dev
    heritage: Helm
    release: gitlab
    chart: gitlab
  name: gitlab-kas-opnsense-ingress
  namespace: dev
spec:
  ingressClassName: external
  rules:
    - host: kas.${CLUSTER_SECRET_PRD_DOMAIN}
      http:
        paths:
          - backend:
              service:
                name: gitlab-kas
                port:
                  number: 8150
            path: /
            pathType: Prefix
          - backend:
                service:
                  name: gitlab-kas
                  port:
                    number: 8154
            path: /k8s-proxy/
            pathType: Prefix
  tls:
    - hosts:
        - kas.${CLUSTER_SECRET_PRD_DOMAIN}
      secretName: "${CLUSTER_SECRET_PRD_DOMAIN/./-}-tls"
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    external-dns.alpha.kubernetes.io/cloudflare-proxied: "false"
    external-dns.alpha.kubernetes.io/target: ipv4.${CLUSTER_SECRET_PRD_DOMAIN}
    kubernetes.io/ingress.provider: nginx
    meta.helm.sh/release-name: gitlab
    meta.helm.sh/release-namespace: dev
    nginx.ingress.kubernetes.io/proxy-body-size: '0'
    nginx.ingress.kubernetes.io/proxy-buffering: 'off'
    nginx.ingress.kubernetes.io/proxy-read-timeout: '900'
    nginx.ingress.kubernetes.io/proxy-request-buffering: 'off'
  labels:
    app: registry
    app.kubernetes.io/managed-by: Helm
    helm.toolkit.fluxcd.io/name: gitlab
    helm.toolkit.fluxcd.io/namespace: dev
    heritage: Helm
    release: gitlab
    chart: gitlab
  name: gitlab-registry-opnsense-ingress
  namespace: dev
spec:
  ingressClassName: external
  rules:
    - host: cr.${CLUSTER_SECRET_PRD_DOMAIN}
      http:
        paths:
          - backend:
              service:
                name: gitlab-registry
                port:
                  number: 5000
            path: /
            pathType: Prefix
  tls:
    - hosts:
        - cr.${CLUSTER_SECRET_PRD_DOMAIN}
      secretName: "${CLUSTER_SECRET_PRD_DOMAIN/./-}-tls"
