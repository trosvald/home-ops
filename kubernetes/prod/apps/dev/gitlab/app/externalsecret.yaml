---
# yaml-language-server: $schema=https://kube-schemas.pages.dev/external-secrets.io/externalsecret_v1beta1.json
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: gitlab
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: onepassword-connect
  refreshInterval: 15m
  target:
    name: gitlab-secret
    template:
      engineVersion: v2
      data:
        GITLAB_INITIAL_ROOT_PASSWORD: "{{ .gitlab_root_password }}"
        GITLAB_KAS_SHARED_SECRET: "{{ .gitlab_kas_shared_secret }}"
        GITLAB_S3_ACCESS_KEY: "{{ .gitlab_s3_access_key }}"
        GITLAB_S3_SECRET_KEY: "{{ .gitlab_s3_secret_key }}"
        GITLAB_S3_DEFAULT_REGION: "{{ .minio_region }}"
        GITLAB_S3_ENDPOINT: "{{ .minio_endpoint }}"
        SMTP_SERVER: "{{ .gitlab_smtp_server }}"
        SMTP_USERNAME: "{{ .gitlab_email_from }}"
        SMTP_PORT: "25"
        EMAIL_DISPLAY_NAME: "{{ .gitlab_email_display_name }}"
        EMAIL_FROM: "{{ .gitlab_email_from }}"
        EMAIL_REPLY_TO: "{{ .gitlab_email_reply_to }}"
  dataFrom:
    - extract:
        key: gitlab
    - extract:
        key: minio
---
# yaml-language-server: $schema=https://kube-schemas.pages.dev/external-secrets.io/externalsecret_v1beta1.json
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: &name gitlab-db
spec:
  refreshInterval: 1m
  secretStoreRef:
    name: crunchy-pgo-secrets
    kind: ClusterSecretStore
  target:
    name: gitlab-secret
    creationPolicy: Merge
    deletionPolicy: Retain
    template:
      type: Opaque
      data:
        MAIN_DB_NAME: '{{ .dbname }}'
        MAIN_DB_HOST: '{{ .host }}'
        MAIN_DB_USER: '{{ .user }}'
        MAIN_DB_PASSWORD: '{{ .password }}'
  dataFrom:
  - extract:
      key: postgres-gitlab-pguser-gitlab
---
# yaml-language-server: $schema=https://kube-schemas.pages.dev/external-secrets.io/externalsecret_v1beta1.json
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: &name gitlab-ci-db
spec:
  refreshInterval: 1m
  secretStoreRef:
    name: crunchy-pgo-secrets
    kind: ClusterSecretStore
  target:
    name: gitlab-secret
    creationPolicy: Merge
    deletionPolicy: Retain
    template:
      type: Opaque
      data:
        CI_DB_NAME: '{{ .dbname }}'
        CI_DB_HOST: '{{ .host }}'
        CI_DB_USER: '{{ .user }}'
        CI_DB_PASSWORD: '{{ .password }}'
  dataFrom:
  - extract:
      key: postgres-gitlab-pguser-gitlab-ci
---
# yaml-language-server: $schema=https://kube-schemas.pages.dev/external-secrets.io/externalsecret_v1beta1.json
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: gitlab-registry-s3
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: onepassword-connect
  refreshInterval: 15m
  target:
    name: gitlab-registry-s3
    template:
      engineVersion: v2
      data:
        config: |
          s3:
            v4auth: true
            pathstyle: true
            regionendpoint: "{{ .minio_endpoint }}"
            region: "{{ .minio_region }}"
            bucket: "{{ .gitlab_registry_bucket_name }}"
            accesskey: "{{ .gitlab_s3_access_key }}"
            secretkey: "{{ .gitlab_s3_secret_key }}"
  dataFrom:
    - extract:
        key: gitlab
    - extract:
        key: minio
---
# yaml-language-server: $schema=https://kube-schemas.pages.dev/external-secrets.io/externalsecret_v1beta1.json
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: gitlab-connection
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: onepassword-connect
  refreshInterval: 15m
  target:
    name: gitlab-connection-secret
    template:
      engineVersion: v2
      data:
        connection: |
          provider: AWS
          path_style: true
          aws_signature_version: 4
          region: "{{ .minio_region }}"
          aws_access_key_id: "{{ .gitlab_s3_access_key }}"
          aws_secret_access_key: "{{ .gitlab_s3_secret_key}}"
          host: "{{ .minio_server }}"
          endpoint: "{{ .minio_endpoint }}"
  dataFrom:
    - extract:
        key: gitlab
    - extract:
        key: minio
---
# yaml-language-server: $schema=https://kube-schemas.pages.dev/external-secrets.io/externalsecret_v1beta1.json
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: gitlab-oidc
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: onepassword-connect
  refreshInterval: 15m
  target:
    name: gitlab-oidc-secret
    template:
      engineVersion: v2
      data:
        provider: |
          name: 'openid_connect'
          label: 'SSO'
          args:
            name: 'openid_connect'
            scope: ['openid','profile','email']
            response_type: 'code'
            issuer: 'https://sso.${CLUSTER_SECRET_PRD_DOMAIN}/application/o/gitlab/'
            discovery: true
            client_auth_method: 'query'
            uid_field: 'preferred_username'
            send_scope_to_token_endpoint: 'true'
            pkce: true
            client_options:
              identifier: "{{ .gitlab_oidc_client_id }}"
              secret: "{{ .gitlab_oidc_client_secret }}"
              redirect_uri: "https://gitlab.${CLUSTER_SECRET_PRD_DOMAIN}/users/auth/openid_connect/callback"
  dataFrom:
    - extract:
        key: gitlab
---
# yaml-language-server: $schema=https://kube-schemas.pages.dev/external-secrets.io/externalsecret_v1beta1.json
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: gitlab-s3cmd
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: onepassword-connect
  target:
    name: gitlab-s3cmd-secret
    creationPolicy: Owner
    template:
      engineVersion: v2
      data:
        local: |
          [default]
          access_key = "{{ .gitlab_s3_access_key }}"
          access_token =
          add_encoding_exts =
          add_headers =
          bucket_location = "{{ .minio_region }}"
          ca_certs_file =
          cache_file =
          check_ssl_certificate = True
          check_ssl_hostname = True
          cloudfront_host = cloudfront.amazonaws.com
          connection_max_age = 5
          connection_pooling = True
          content_disposition =
          content_type =
          default_mime_type = binary/octet-stream
          delay_updates = False
          delete_after = False
          delete_after_fetch = False
          delete_removed = False
          dry_run = False
          enable_multipart = True
          encoding = UTF-8
          encrypt = False
          expiry_date =
          expiry_days =
          expiry_prefix =
          follow_symlinks = False
          force = False
          get_continue = False
          gpg_command = /usr/bin/gpg
          gpg_decrypt = %(gpg_command)s -d --verbose --no-use-agent --batch --yes --passphrase-fd %(passphrase_fd)s -o %(output_file)s %(input_file)s
          gpg_encrypt = %(gpg_command)s -c --verbose --no-use-agent --batch --yes --passphrase-fd %(passphrase_fd)s -o %(output_file)s %(input_file)s
          gpg_passphrase =
          guess_mime_type = True
          host_base = "{{ .minio_server }}"
          host_bucket = "{{ .minio_server }}"
          human_readable_sizes = False
          invalidate_default_index_on_cf = False
          invalidate_default_index_root_on_cf = True
          invalidate_on_cf = False
          kms_key =
          limit = -1
          limitrate = 0
          list_md5 = False
          log_target_prefix =
          long_listing = False
          max_delete = -1
          mime_type =
          multipart_chunk_size_mb = 128
          multipart_copy_chunk_size_mb = 1024
          multipart_max_chunks = 10000
          preserve_attrs = True
          progress_meter = True
          proxy_host =
          proxy_port = 0
          public_url_use_https = False
          put_continue = False
          recursive = False
          recv_chunk = 65536
          reduced_redundancy = False
          requester_pays = False
          restore_days = 1
          restore_priority = Standard
          secret_key = "{{ .gitlab_s3_secret_key }}"
          send_chunk = 65536
          server_side_encryption = False
          signature_v2 = False
          signurl_use_https = False
          simpledb_host = sdb.amazonaws.com
          skip_existing = False
          socket_timeout = 300
          ssl_client_cert_file =
          ssl_client_key_file =
          stats = False
          stop_on_error = False
          storage_class =
          throttle_max = 100
          upload_id =
          urlencoding_mode = normal
          use_http_expect = False
          use_https = True
          use_mime_magic = True
          verbosity = WARNING
          website_endpoint = http://%(bucket)s.s3-website-%(location)s.amazonaws.com/
          website_error =
          website_index = index.html
  dataFrom:
    - extract:
        key: gitlab
    - extract:
        key: minio