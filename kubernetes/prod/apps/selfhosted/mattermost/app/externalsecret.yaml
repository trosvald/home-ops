---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/external-secrets.io/externalsecret_v1beta1.json
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: mattermost
  namespace: default
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: onepassword-connect
  target:
    name: mattermost-secret
    creationPolicy: Owner
    template:
      engineVersion: v2
      data:
        # App
        MM_SQLSETTINGS_DRIVERNAME: postgres
        MM_DB_HOST: "{{ .POSTGRES_HOST }}"
        MM_DB_DATABASE: "{{ .MATTERMOST_POSTGRES_DBNAME }}"
        MM_DB_USERNAME: "{{ .MATTERMOST_POSTGRES_USER }}"
        MM_DB_PASSWORD: "{{ .MATTERMOST_POSTGRES_PASS }}"
        MM_SQLSETTINGS_DATASOURCE: "postgres://{{ .MATTERMOST_POSTGRES_USER }}:{{ .MATTERMOST_POSTGRES_PASS }}@{{ .POSTGRES_HOST }}:5432/{{ .MATTERMOST_POSTGRES_DBNAME }}?sslmode=disable&connect_timeout=10"

  dataFrom:
    - extract:
        key: mattermost
---
# yaml-language-server: $schema=https://kube-schemas.pages.dev/external-secrets.io/externalsecret_v1beta1.json
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: &name authentik-db-secret
spec:
  refreshInterval: 1m
  secretStoreRef:
    name: crunchy-pgo-secrets
    kind: ClusterSecretStore
  target:
    name: authentik-secret
    creationPolicy: Merge
    deletionPolicy: Retain
    template:
      type: Opaque
      data:
        AUTHENTIK_POSTGRESQL__NAME: '{{ .dbname }}'
        AUTHENTIK_POSTGRESQL__HOST: '{{ .host }}'
        AUTHENTIK_POSTGRESQL__USER: '{{ .user }}'
        AUTHENTIK_POSTGRESQL__PASSWORD: '{{ .password }}'
        # pgBouncer default is set to session, and Authentik requires transaction
        AUTHENTIK_POSTGRESQL__USE_PGBOUNCER: 'false'
        AUTHENTIK_POSTGRESQL__SSLMODE: 'require'
  dataFrom:
  - extract:
      key: postgres-pguser-authentik