---
# Note: Gatus vars should be escaped with $${VAR_NAME} to avoid interpolation by Flux
web:
  port: $${WEB_PORT}
storage:
  type: postgres
  path: $${POSTGRES_URI}?sslmode=require
  caching: true
metrics: true
debug: false
# security:
#   oidc:
#     issuer-url: https://sso.${CLUSTER_SECRET_PRD_DOMAIN}/application/o/gatus/
#     client-id: $${CLIENT_ID}
#     client-secret: $${CLIENT_SECRET}
#     redirect-url: https://status.${CLUSTER_SECRET_PRD_DOMAIN}/authorization-code/callback
#     scopes: [openid]
ui:
  title: Uptime Monitor
  header: Status
alerting:
  telegram:
    id: $${TELEGRAM_CHANNEL_ID}
    token: $${TELEGRAM_TOKEN}
  pushover:
    title: Gatus
    application-token: $${PUSHOVER_TOKEN}
    user-key: $${PUSHOVER_USER_KEY}
    priority: 1
    default-alert:
      description: health-check failed
      send-on-resolved: true
      failure-threshold: 3
      success-threshold: 3
connectivity:
  checker:
    target: 1.1.1.1:53
    interval: 1m
endpoints:
  - name: status
    group: external
    url: https://status.${CLUSTER_SECRET_PRD_DOMAIN}
    interval: 1m
    client:
      dns-resolver: tcp://1.1.1.1:53
    conditions:
      - "[STATUS] == 200"
    alerts:
      - type: telegram
        send-on-resolved: true
  - name: flux-webhook
    group: external
    url: https://flux-webhook.${CLUSTER_SECRET_PRD_DOMAIN}
    interval: 1m
    client:
      dns-resolver: tcp://1.1.1.1:53
    conditions:
      - "[STATUS] == 404"
    alerts:
      - type: telegram
        send-on-resolved: true
