---
# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/external-secrets.io/externalsecret_v1beta1.json
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: &name authentik-secret
spec:
  secretStoreRef:
    kind: ClusterSecretStore
    name: onepassword-connect
  target:
    name: *name
    creationPolicy: Owner
    template:
      engineVersion: v2
      data:
        # DB
        # Postgres Init
        INIT_POSTGRES_DBNAME: &dbname authentik
        INIT_POSTGRES_HOST: &dbhost postgres16-rw.database.svc.cluster.local
        INIT_POSTGRES_USER: &dbuser "{{ .authentik_postgres_user }}"
        INIT_POSTGRES_PASS: &dbpass "{{ .authentik_postgres_pass }}"
        INIT_POSTGRES_SUPER_PASS: "{{ .cnpg_super_pass }}"
        #
        AUTHENTIK_POSTGRESQL__HOST: *dbhost
        AUTHENTIK_POSTGRESQL__NAME: *dbname
        AUTHENTIK_POSTGRESQL__USER: *dbuser
        AUTHENTIK_POSTGRESQL__PASSWORD: *dbpass

        # App
        AUTHENTIK_EMAIL__HOST: "{{ .authentik_smtp_host }}"
        AUTHENTIK_EMAIL__PORT: "{{ .authentik_smtp_port }}"
        AUTHENTIK_EMAIL__USE_SSL: "false"
        AUTHENTIK_EMAIL__FROM: "{{ .authentik_email_from }}"
        AUTHENTIK_REDIS__DB: "1"
        AUTHENTIK_SECRET_KEY: "{{ .authentik_secret_key }}"
        AUTHENTIK_BOOTSTRAP_TOKEN: "{{ .authentik_api_token }}"
        AUTHENTIK_BOOTSTRAP_PASSWORD: "{{ .authentik_bootstrap_password }}"
        AUTHENTIK_BOOTSTRAP_EMAIL: "{{ .authentik_email_username }}"

  dataFrom:
    - extract:
        key: authentik
    - extract:
        key: cloudnative-pg
    - extract:
        key: zohomail
# ---
# # yaml-language-server: $schema=https://kube-schemas.pages.dev/external-secrets.io/externalsecret_v1beta1.json
# apiVersion: external-secrets.io/v1beta1
# kind: ExternalSecret
# metadata:
#   name: &name authentik-db-secret
# spec:
#   refreshInterval: 1m
#   secretStoreRef:
#     name: crunchy-pgo-secrets
#     kind: ClusterSecretStore
#   target:
#     name: authentik-secret
#     creationPolicy: Merge
#     deletionPolicy: Retain
#     template:
#       type: Opaque
#       data:
#         AUTHENTIK_POSTGRESQL__NAME: '{{ .dbname }}'
#         AUTHENTIK_POSTGRESQL__HOST: '{{ .host }}'
#         AUTHENTIK_POSTGRESQL__USER: '{{ .user }}'
#         AUTHENTIK_POSTGRESQL__PASSWORD: '{{ .password }}'
#         # pgBouncer default is set to session, and Authentik requires transaction
#         AUTHENTIK_POSTGRESQL__USE_PGBOUNCER: 'false'
#         AUTHENTIK_POSTGRESQL__SSLMODE: 'require'
#   dataFrom:
#   - extract:
#       key: postgres-pguser-authentik