---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app pgadmin
spec:
  interval: 30m
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  dependsOn:
    - name: rook-ceph-cluster
      namespace: rook-ceph
  values:
    controllers:
      pgadmin:
        pod:
          securityContext:
            runAsUser: 5050 # ${APP_UID}
            runAsGroup: 5050 # ${APP_GID}
            fsGroup: 5050 # ${APP_GID}
            fsGroupChangePolicy: OnRootMismatch
        replicas: 1
        strategy: RollingUpdate
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          pgadmin:
            image:
              repository: docker.io/dpage/pgadmin4
              tag: "9.8@sha256:d115bcd737940a6cfb61a54439d50de8b850e0782e2363102c9fa761f4022f49"
            envFrom:
              - secretRef:
                  name: pgadmin-secret
              - secretRef:
                  name: pgadmin-credentials-secret
            resources:
              requests:
                cpu: 15m
                memory: 164M
              limits:
                memory: 236M
    service:
      pgadmin:
        controller: *app
        ports:
          http:
            port: &port 80
    route:
      main:
        enabled: true
        kind: HTTPRoute
        parentRefs:
          - kind: Gateway
            name: internal
            namespace: networking
        hostnames:
          - pgadmin.monosense.dev
        rules:
          - backendRefs:
              - name: *app
                port: *port
            matches:
              - path:
                  type: PathPrefix
                  value: /
    persistence:
      config:
        enabled: true
        existingClaim: *app
        advancedMounts:
          pgadmin:
            app:
              - path: /var/lib/pgadmin
      oauth:
        enabled: true
        type: secret
        name: pgadmin-secret
        advancedMounts:
          pgadmin:
            app:
              - path: /pgadmin4/config_local.py
                subPath: config_local.py
              - path: /pgadmin4/.pgpass
                subPath: .pgpass
      server-json:
        enabled: true
        type: configMap
        name: servers-json
        globalMounts:
          - path: /pgadmin4/servers.json
            subPath: servers.json
