---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app radarr
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      radarr:
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          init-db:
            image:
              repository: ghcr.io/home-operations/postgres-init
              tag: 17
            envFrom:
              - secretRef:
                  name: radarr-initdb-secret
        containers:
          app:
            image:
              repository: ghcr.io/home-operations/radarr
              tag: 5.25.0.10024@sha256:f4e472beddcb6197fa9d08c41681dedbf21bee38db7f97057ba1d44dc9440a0c
            env:
              RADARR__APP__INSTANCENAME: Radarr
              RADARR__APP__THEME: dark
              RADARR__AUTH__METHOD: External
              RADARR__AUTH__REQUIRED: DisabledForLocalAddresses
              RADARR__LOG__LEVEL: info
              RADARR__SERVER__PORT: &port 7878
              RADARR__UPDATE__BRANCH: develop
              RADARR__POSTGRES__HOST:
                valueFrom:
                  secretKeyRef:
                    name: radarr-pguser-secret
                    key: host
              RADARR__POSTGRES__PORT:
                valueFrom:
                  secretKeyRef:
                    name: radarr-pguser-secret
                    key: port
              RADARR__POSTGRES__USER:
                valueFrom:
                  secretKeyRef:
                    name: radarr-pguser-secret
                    key: user
              RADARR__POSTGRES__PASSWORD:
                valueFrom:
                  secretKeyRef:
                    name: radarr-pguser-secret
                    key: password
              RADARR__POSTGRES__MAINDB: radarr
              RADARR__POSTGRES__LOGDB: radarr_log
              TZ: Asia/Jakarta
            envFrom:
              - secretRef:
                  name: radarr-secret
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            resources:
              requests:
                cpu: 100m
              limits:
                memory: 4Gi
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups: [65536]
    persistence:
      config:
        existingClaim: *app
      media:
        type: nfs
        server: storage.monosense.dev
        path: /volume1/Media
      tmpfs:
        type: emptyDir
        advancedMounts:
          radarr:
            app:
              - path: /config/logs
                subPath: logs
              - path: /tmp
                subPath: tmp
    route:
      app:
        hostnames:
          - "{{ .Release.Name }}.monosense.io"
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - identifier: app
                port: *port
    service:
      app:
        ports:
          http:
            port: *port
