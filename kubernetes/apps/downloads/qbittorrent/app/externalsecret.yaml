---
# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/external-secrets.io/externalsecret_v1.json
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: qbittorrent
spec:
  refreshInterval: 5m
  secretStoreRef:
    kind: ClusterSecretStore
    name: onepassword
  target:
    name: qbittorrent-secret
    creationPolicy: Owner
  data:
    - secretKey: WIREGUARD_ENDPOINT_IP
      remoteRef:
        key: proton-vpn
        property: WG_ENDPOINT_IP
    - secretKey: WIREGUARD_PUBLIC_KEY
      remoteRef:
        key: proton-vpn
        property: WG_PUBLIC_KEY
    - secretKey: WIREGUARD_PRIVATE_KEY
      remoteRef:
        key: proton-vpn
        property: WG_PRIVATE_KEY
    - secretKey: WIREGUARD_ADDRESSES
      remoteRef:
        key: proton-vpn
        property: WG_ADDRESS
    # - secretKey: xseed_api_key
    #   remoteRef:
    #     key: cross-seed
    #     property: api_key
    - secretKey: GLUETUN_CONTROL_SERVER_API_KEY
      remoteRef:
        key: proton-vpn
        property: GLUETUN_API_KEY
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/external-secrets.io/externalsecret_v1.json
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: qbittorrent-gluetun
spec:
  refreshInterval: 5m
  secretStoreRef:
    kind: ClusterSecretStore
    name: onepassword
  target:
    name: qbittorrent-gluetun-secret
    creationPolicy: Owner
    template:
      data:
        auth.toml: |
          [[roles]]
          name = "gluetun-qb-port-sync"
          routes = [
            "GET /v1/publicip/ip",
            "GET /v1/openvpn/portforwarded"
          ]
          auth = "apikey"
          apikey = "{{ .gluetun_api_key }}"
  dataFrom:
    - extract:
        key: proton_vpn
      # rewrite:
      #   - regexp:
      #       source: "(.*)"
      #       target: "gluetun_$1"
